//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.EntityFrameworkCore.Tools.Properties {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.EntityFrameworkCore.Tools.Properties.Resources", typeof(Resources).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Build failed..
        /// </summary>
        internal static string BuildFailed {
            get {
                return ResourceManager.GetString("BuildFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration to use..
        /// </summary>
        internal static string ConfigurationDescription {
            get {
                return ResourceManager.GetString("ConfigurationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection string to the database..
        /// </summary>
        internal static string ConnectionDescription {
            get {
                return ResourceManager.GetString("ConnectionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DbContext to use..
        /// </summary>
        internal static string ContextDescription {
            get {
                return ResourceManager.GetString("ContextDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the DbContext..
        /// </summary>
        internal static string ContextNameDescription {
            get {
                return ResourceManager.GetString("ContextNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use attributes to configure the model (where possible). If omitted, only the fluent API is used..
        /// </summary>
        internal static string DataAnnotationsDescription {
            get {
                return ResourceManager.GetString("DataAnnotationsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commands to manage the database..
        /// </summary>
        internal static string DatabaseDescription {
            get {
                return ResourceManager.GetString("DatabaseDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drops the database..
        /// </summary>
        internal static string DatabaseDropDescription {
            get {
                return ResourceManager.GetString("DatabaseDropDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show which database would be dropped, but don&apos;t drop it..
        /// </summary>
        internal static string DatabaseDropDryRunDescription {
            get {
                return ResourceManager.GetString("DatabaseDropDryRunDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t confirm..
        /// </summary>
        internal static string DatabaseDropForceDescription {
            get {
                return ResourceManager.GetString("DatabaseDropForceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updates the database to a specified migration..
        /// </summary>
        internal static string DatabaseUpdateDescription {
            get {
                return ResourceManager.GetString("DatabaseUpdateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commands to manage DbContext types..
        /// </summary>
        internal static string DbContextDescription {
            get {
                return ResourceManager.GetString("DbContextDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets information about a DbContext type..
        /// </summary>
        internal static string DbContextInfoDescription {
            get {
                return ResourceManager.GetString("DbContextInfoDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lists available DbContext types..
        /// </summary>
        internal static string DbContextListDescription {
            get {
                return ResourceManager.GetString("DbContextListDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scaffolds a DbContext and entity types for a database..
        /// </summary>
        internal static string DbContextScaffoldDescription {
            get {
                return ResourceManager.GetString("DbContextScaffoldDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overwrite existing files..
        /// </summary>
        internal static string DbContextScaffoldForceDescription {
            get {
                return ResourceManager.GetString("DbContextScaffoldForceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity Framework Core .NET Command Line Tools.
        /// </summary>
        internal static string DotnetEfFullName {
            get {
                return ResourceManager.GetString("DotnetEfFullName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity Framework Core Command Line Tools.
        /// </summary>
        internal static string EFFullName {
            get {
                return ResourceManager.GetString("EFFullName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The environment to use. Defaults to &quot;Development&quot;..
        /// </summary>
        internal static string EnvironmentDescription {
            get {
                return ResourceManager.GetString("EnvironmentDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target framework..
        /// </summary>
        internal static string FrameworkDescription {
            get {
                return ResourceManager.GetString("FrameworkDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to retrieve project metadata. Ensure it&apos;s an MSBuild-based .NET Core project. If you&apos;re using custom BaseIntermediateOutputPath or MSBuildProjectExtensionsPath values, Use the --msbuildprojectextensionspath option..
        /// </summary>
        internal static string GetMetadataFailed {
            get {
                return ResourceManager.GetString("GetMetadataFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generate a script that can be used on a database at any migration..
        /// </summary>
        internal static string IdempotentDescription {
            get {
                return ResourceManager.GetString("IdempotentDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show JSON output..
        /// </summary>
        internal static string JsonDescription {
            get {
                return ResourceManager.GetString("JsonDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target migration. If &apos;0&apos;, all migrations will be reverted. Defaults to the last migration..
        /// </summary>
        internal static string MigrationDescription {
            get {
                return ResourceManager.GetString("MigrationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The starting migration. Defaults to &apos;0&apos; (the initial database)..
        /// </summary>
        internal static string MigrationFromDescription {
            get {
                return ResourceManager.GetString("MigrationFromDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the migration..
        /// </summary>
        internal static string MigrationNameDescription {
            get {
                return ResourceManager.GetString("MigrationNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adds a new migration..
        /// </summary>
        internal static string MigrationsAddDescription {
            get {
                return ResourceManager.GetString("MigrationsAddDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commands to manage migrations..
        /// </summary>
        internal static string MigrationsDescription {
            get {
                return ResourceManager.GetString("MigrationsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lists available migrations..
        /// </summary>
        internal static string MigrationsListDescription {
            get {
                return ResourceManager.GetString("MigrationsListDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory (and sub-namespace) to use. Paths are relative to the project directory. Defaults to &quot;Migrations&quot;..
        /// </summary>
        internal static string MigrationsOutputDirDescription {
            get {
                return ResourceManager.GetString("MigrationsOutputDirDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removes the last migration..
        /// </summary>
        internal static string MigrationsRemoveDescription {
            get {
                return ResourceManager.GetString("MigrationsRemoveDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t check to see if the migration has been applied to the database..
        /// </summary>
        internal static string MigrationsRemoveForceDescription {
            get {
                return ResourceManager.GetString("MigrationsRemoveForceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generates a SQL script from migrations..
        /// </summary>
        internal static string MigrationsScriptDescription {
            get {
                return ResourceManager.GetString("MigrationsScriptDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ending migration. Defaults to the last migration..
        /// </summary>
        internal static string MigrationToDescription {
            get {
                return ResourceManager.GetString("MigrationToDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one project was found in the current working directory. Use the --project option..
        /// </summary>
        internal static string MultipleProjects {
            get {
                return ResourceManager.GetString("MultipleProjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one project was found in directory &apos;{0}&apos;. Specify one using its file name..
        /// </summary>
        internal static string MultipleProjectsInDirectory {
            get {
                return ResourceManager.GetString("MultipleProjectsInDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one project was found in the current working directory. Use the --startup-project option..
        /// </summary>
        internal static string MultipleStartupProjects {
            get {
                return ResourceManager.GetString("MultipleStartupProjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Startup project &apos;{0}&apos; targets framework &apos;.NETStandard&apos;. This framework is not intended for execution and may fail to resolve runtime dependencies. If so, specify a different project using the --startup-project option and try again..
        /// </summary>
        internal static string NETStandardStartupProject {
            get {
                return ResourceManager.GetString("NETStandardStartupProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t colorize output..
        /// </summary>
        internal static string NoColorDescription {
            get {
                return ResourceManager.GetString("NoColorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No project was found. Change the current working directory or use the --project option..
        /// </summary>
        internal static string NoProject {
            get {
                return ResourceManager.GetString("NoProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No project was found in directory &apos;{0}&apos;..
        /// </summary>
        internal static string NoProjectInDirectory {
            get {
                return ResourceManager.GetString("NoProjectInDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No project was found. Change the current working directory or use the --startup-project option..
        /// </summary>
        internal static string NoStartupProject {
            get {
                return ResourceManager.GetString("NoStartupProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file to write the result to..
        /// </summary>
        internal static string OutputDescription {
            get {
                return ResourceManager.GetString("OutputDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory to put files in. Paths are relative to the project directory..
        /// </summary>
        internal static string OutputDirDescription {
            get {
                return ResourceManager.GetString("OutputDirDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prefix output with level..
        /// </summary>
        internal static string PrefixDescription {
            get {
                return ResourceManager.GetString("PrefixDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The project to use..
        /// </summary>
        internal static string ProjectDescription {
            get {
                return ResourceManager.GetString("ProjectDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MSBuild project extensions path. Defaults to &quot;obj&quot;..
        /// </summary>
        internal static string ProjectExtensionsDescription {
            get {
                return ResourceManager.GetString("ProjectExtensionsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provider to use. (E.g. Microsoft.EntityFrameworkCore.SqlServer).
        /// </summary>
        internal static string ProviderDescription {
            get {
                return ResourceManager.GetString("ProviderDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The schemas of tables to generate entity types for..
        /// </summary>
        internal static string SchemasDescription {
            get {
                return ResourceManager.GetString("SchemasDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The startup project to use..
        /// </summary>
        internal static string StartupProjectDescription {
            get {
                return ResourceManager.GetString("StartupProjectDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tables to generate entity types for..
        /// </summary>
        internal static string TablesDescription {
            get {
                return ResourceManager.GetString("TablesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Startup project &apos;{0}&apos; targets framework &apos;{1}&apos;. The Entity Framework Core .NET Command Line Tools don&apos;t support this framework..
        /// </summary>
        internal static string UnsupportedFramework {
            get {
                return ResourceManager.GetString("UnsupportedFramework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using project &apos;{0}&apos;..
        /// </summary>
        internal static string UsingProject {
            get {
                return ResourceManager.GetString("UsingProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using startup project &apos;{0}&apos;..
        /// </summary>
        internal static string UsingStartupProject {
            get {
                return ResourceManager.GetString("UsingStartupProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show verbose output..
        /// </summary>
        internal static string VerboseDescription {
            get {
                return ResourceManager.GetString("VerboseDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing &apos;{0}&apos;....
        /// </summary>
        internal static string WritingFile {
            get {
                return ResourceManager.GetString("WritingFile", resourceCulture);
            }
        }
    }
}
